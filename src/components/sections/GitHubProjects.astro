---
import Card from '../Card.astro';
import { Github } from 'lucide-react';

// 1. Definir detalles personalizados para cada proyecto
const projectDetails = {
  "Portafolio-Edwin-Flores-2025": {
    title: "Portafolio Personal v2",
    description: "Mi portafolio personal reconstruido con Astro para una performance increíble y un diseño moderno y responsivo.",
    tech: ["Astro", "React", "Tailwind CSS"]
  },
  "Analisis-Estadistico-House-Prices-Streamlit": {
    title: "Análisis de Precios de Vivienda",
    description: "Dashboard interactivo para el análisis estadístico y visualización de datos de precios de vivienda.",
    tech: ["Python", "Streamlit", "Pandas", "Seaborn"]
  },
  "API-REST-ProyectoDBP-TIENDA": {
    title: "API REST para E-commerce",
    description: "Backend robusto para una tienda en línea, con gestión de productos, usuarios y pedidos.",
    tech: ["Node.js", "Express", "MongoDB", "JWT"]
  },
  "SAP-UI5-16072025": {
    title: "Aplicación SAP Fiori/UI5",
    description: "Aplicación empresarial desarrollada sobre SAP UI5, siguiendo los lineamientos de diseño de Fiori.",
    tech: ["SAP UI5", "JavaScript", "XML"]
  },
  "billar-python-20072025": {
    title: "Simulador de Billar en Python",
    description: "Juego de billar simple con motor de físicas 2D para simular colisiones y movimiento de las bolas.",
    tech: ["Python", "Pygame"]
  },
  "Creador-de-Cuestionarios-y-Preguntas-Competencia-de-Kahoot": {
    title: "Plataforma de Cuestionarios",
    description: "Aplicación web para crear y responder cuestionarios interactivos en tiempo real, similar a Kahoot.",
    tech: ["React", "Firebase", "Node.js"]
  }
};

async function getGithubProjects() {
    try {
        const response = await fetch('https://api.github.com/users/EdwinFlores19/repos?sort=updated&direction=desc');
        if (!response.ok) {
            return [];
        }
        const repos = await response.json();
        
        const projectNamesToShow = Object.keys(projectDetails);

        return repos
            .filter(repo => projectNamesToShow.includes(repo.name))
            .map(repo => {
                const details = projectDetails[repo.name];
                return {
                    title: details.title,
                    description: details.description,
                    tech: details.tech,
                    link: repo.html_url,
                    stars: repo.stargazers_count,
                    forks: repo.forks_count
                };
            });
    } catch (error) {
        console.error("Error fetching GitHub projects:", error);
        return [];
    }
}

const projects = await getGithubProjects();
---
<section id="github-projects" class="py-24">
    <h2 class="text-4xl font-bold mb-12 text-center">Mis Proyectos en GitHub</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {projects.map(project => (
            <a href={project.link} target="_blank" rel="noopener noreferrer" class="block hover:scale-105 transition-transform duration-300 h-full">
                <Card>
                    <div class="flex flex-col h-full">
                        <div class="flex justify-between items-start">
                            <Github className="text-primary mb-4" size={36}/>
                            <div class="text-right">
                                <p class="text-sm font-semibold text-text-secondary">⭐ {project.stars}</p>
                                <p class="text-sm font-semibold text-text-secondary"> Forks: {project.forks}</p>
                            </div>
                        </div>
                        <h3 class="text-xl font-bold mb-2">{project.title}</h3>
                        <p class="text-text-secondary flex-grow">{project.description}</p>
                        <div class="flex flex-wrap gap-2 mt-4">
                            {project.tech.map(item => (
                                <span class="bg-background text-text-secondary text-sm font-medium px-3 py-1 rounded-full border border-card/50">
                                    {item}
                                </span>
                            ))}
                        </div>
                    </div>
                </Card>
            </a>
        ))}
    </div>
    <div class="text-center mt-12">
        <a href="https://github.com/EdwinFlores19" target="_blank" rel="noopener noreferrer"
           class="inline-block bg-primary text-white font-semibold py-3 px-8 rounded-lg hover:bg-primary/80 transition-transform duration-300 hover:scale-105 text-lg">
           Ver más en GitHub
        </a>
    </div>
</section>